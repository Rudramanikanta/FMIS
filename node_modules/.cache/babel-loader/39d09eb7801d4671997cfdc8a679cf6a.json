{"ast":null,"code":"import _slicedToArray from \"D:/react/crp-project/crp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState, useEffect } from 'react';\n/**\n * Fetch and load an image for programatic use such as in a `<canvas>` element.\n *\n * @param imageOrUrl The `HtmlImageElement` or image url to load\n * @param crossOrigin The `crossorigin` attribute to set\n *\n * ```ts\n * const { image, error } = useImage('/static/kittens.png')\n * const ref = useRef<HTMLCanvasElement>()\n *\n * useEffect(() => {\n *   const ctx = ref.current.getContext('2d')\n *\n *   if (image) {\n *     ctx.drawImage(image, 0, 0)\n *   }\n * }, [ref, image])\n *\n * return (\n *   <>\n *     {error && \"there was a problem loading the image\"}\n *     <canvas ref={ref} />\n *   </>\n * ```\n */\n\nexport default function useImage(imageOrUrl, crossOrigin) {\n  var _useState = useState({\n    image: null,\n    error: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  useEffect(function () {\n    if (!imageOrUrl) return undefined;\n    var image;\n\n    if (typeof imageOrUrl === 'string') {\n      image = new Image();\n      if (crossOrigin) image.crossOrigin = crossOrigin;\n      image.src = imageOrUrl;\n    } else {\n      image = imageOrUrl;\n\n      if (image.complete && image.naturalHeight > 0) {\n        setState({\n          image: image,\n          error: null\n        });\n        return;\n      }\n    }\n\n    function onLoad() {\n      setState({\n        image: image,\n        error: null\n      });\n    }\n\n    function onError(error) {\n      setState({\n        image: image,\n        error: error\n      });\n    }\n\n    image.addEventListener('load', onLoad);\n    image.addEventListener('error', onError);\n    return function () {\n      image.removeEventListener('load', onLoad);\n      image.removeEventListener('error', onError);\n    };\n  }, [imageOrUrl, crossOrigin]);\n  return state;\n}","map":{"version":3,"names":["useState","useEffect","useImage","imageOrUrl","crossOrigin","image","error","state","setState","undefined","Image","src","complete","naturalHeight","onLoad","onError","addEventListener","removeEventListener"],"sources":["D:/react/crp-project/crp/node_modules/@restart/hooks/esm/useImage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n/**\n * Fetch and load an image for programatic use such as in a `<canvas>` element.\n *\n * @param imageOrUrl The `HtmlImageElement` or image url to load\n * @param crossOrigin The `crossorigin` attribute to set\n *\n * ```ts\n * const { image, error } = useImage('/static/kittens.png')\n * const ref = useRef<HTMLCanvasElement>()\n *\n * useEffect(() => {\n *   const ctx = ref.current.getContext('2d')\n *\n *   if (image) {\n *     ctx.drawImage(image, 0, 0)\n *   }\n * }, [ref, image])\n *\n * return (\n *   <>\n *     {error && \"there was a problem loading the image\"}\n *     <canvas ref={ref} />\n *   </>\n * ```\n */\nexport default function useImage(imageOrUrl, crossOrigin) {\n  const [state, setState] = useState({\n    image: null,\n    error: null\n  });\n  useEffect(() => {\n    if (!imageOrUrl) return undefined;\n    let image;\n    if (typeof imageOrUrl === 'string') {\n      image = new Image();\n      if (crossOrigin) image.crossOrigin = crossOrigin;\n      image.src = imageOrUrl;\n    } else {\n      image = imageOrUrl;\n      if (image.complete && image.naturalHeight > 0) {\n        setState({\n          image,\n          error: null\n        });\n        return;\n      }\n    }\n    function onLoad() {\n      setState({\n        image,\n        error: null\n      });\n    }\n    function onError(error) {\n      setState({\n        image,\n        error\n      });\n    }\n    image.addEventListener('load', onLoad);\n    image.addEventListener('error', onError);\n    return () => {\n      image.removeEventListener('load', onLoad);\n      image.removeEventListener('error', onError);\n    };\n  }, [imageOrUrl, crossOrigin]);\n  return state;\n}"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,QAAT,CAAkBC,UAAlB,EAA8BC,WAA9B,EAA2C;EACxD,gBAA0BJ,QAAQ,CAAC;IACjCK,KAAK,EAAE,IAD0B;IAEjCC,KAAK,EAAE;EAF0B,CAAD,CAAlC;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EAIAP,SAAS,CAAC,YAAM;IACd,IAAI,CAACE,UAAL,EAAiB,OAAOM,SAAP;IACjB,IAAIJ,KAAJ;;IACA,IAAI,OAAOF,UAAP,KAAsB,QAA1B,EAAoC;MAClCE,KAAK,GAAG,IAAIK,KAAJ,EAAR;MACA,IAAIN,WAAJ,EAAiBC,KAAK,CAACD,WAAN,GAAoBA,WAApB;MACjBC,KAAK,CAACM,GAAN,GAAYR,UAAZ;IACD,CAJD,MAIO;MACLE,KAAK,GAAGF,UAAR;;MACA,IAAIE,KAAK,CAACO,QAAN,IAAkBP,KAAK,CAACQ,aAAN,GAAsB,CAA5C,EAA+C;QAC7CL,QAAQ,CAAC;UACPH,KAAK,EAALA,KADO;UAEPC,KAAK,EAAE;QAFA,CAAD,CAAR;QAIA;MACD;IACF;;IACD,SAASQ,MAAT,GAAkB;MAChBN,QAAQ,CAAC;QACPH,KAAK,EAALA,KADO;QAEPC,KAAK,EAAE;MAFA,CAAD,CAAR;IAID;;IACD,SAASS,OAAT,CAAiBT,KAAjB,EAAwB;MACtBE,QAAQ,CAAC;QACPH,KAAK,EAALA,KADO;QAEPC,KAAK,EAALA;MAFO,CAAD,CAAR;IAID;;IACDD,KAAK,CAACW,gBAAN,CAAuB,MAAvB,EAA+BF,MAA/B;IACAT,KAAK,CAACW,gBAAN,CAAuB,OAAvB,EAAgCD,OAAhC;IACA,OAAO,YAAM;MACXV,KAAK,CAACY,mBAAN,CAA0B,MAA1B,EAAkCH,MAAlC;MACAT,KAAK,CAACY,mBAAN,CAA0B,OAA1B,EAAmCF,OAAnC;IACD,CAHD;EAID,CAnCQ,EAmCN,CAACZ,UAAD,EAAaC,WAAb,CAnCM,CAAT;EAoCA,OAAOG,KAAP;AACD"},"metadata":{},"sourceType":"module"}