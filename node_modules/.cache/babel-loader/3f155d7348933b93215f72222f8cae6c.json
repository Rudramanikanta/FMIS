{"ast":null,"code":"const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    runTransition,\n    backdropTransition,\n    runBackdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  } // TODO: I think this needs to be in an effect\n\n\n  if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current; // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n\n\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = function () {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...arguments);\n  };\n\n  if (!container) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","map":{"version":3,"names":["_excluded","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","i","length","indexOf","activeElement","contains","canUseDOM","listen","useState","useRef","useCallback","useImperativeHandle","forwardRef","useEffect","React","ReactDOM","useMounted","useWillUnmount","usePrevious","useEventCallback","ModalManager","useWaitForDOMRef","useWindow","renderTransition","isEscKey","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","manager","getManager","window","ownerDocument","document","useModalManager","provided","modalManager","modal","dialog","backdrop","assign","current","add","remove","isTopModal","setDialogRef","ref","setBackdropRef","Modal","_ref","show","role","className","style","children","keyboard","onBackdropClick","onEscapeKeyDown","transition","runTransition","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","props","providedManager","container","containerRef","onShow","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","ownerWindow","isMounted","prevShow","exited","setExited","lastFocusRef","handleShow","removeKeydownListenerRef","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","e","currentTarget","defaultPrevented","handleHidden","dialogProps","undefined","tabIndex","cloneElement","unmountOnExit","mountOnEnter","appear","in","backdropElement","onClick","createPortal","displayName","Manager"],"sources":["D:/react/crp-project/crp/node_modules/@restart/ui/esm/Modal.js"],"sourcesContent":["const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}