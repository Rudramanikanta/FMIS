{"ast":null,"code":"import _slicedToArray from \"D:/react/crp-project/crp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport useMergeState from './useMergeState';\nexport default function useMergeStateFromProps(props, gDSFP, initialState) {\n  var _useMergeState = useMergeState(initialState),\n      _useMergeState2 = _slicedToArray(_useMergeState, 2),\n      state = _useMergeState2[0],\n      setState = _useMergeState2[1];\n\n  var nextState = gDSFP(props, state);\n  if (nextState !== null) setState(nextState);\n  return [state, setState];\n}","map":{"version":3,"names":["useMergeState","useMergeStateFromProps","props","gDSFP","initialState","state","setState","nextState"],"sources":["D:/react/crp-project/crp/node_modules/@restart/hooks/esm/useMergeStateFromProps.js"],"sourcesContent":["import useMergeState from './useMergeState';\nexport default function useMergeStateFromProps(props, gDSFP, initialState) {\n  const [state, setState] = useMergeState(initialState);\n  const nextState = gDSFP(props, state);\n  if (nextState !== null) setState(nextState);\n  return [state, setState];\n}"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,eAAe,SAASC,sBAAT,CAAgCC,KAAhC,EAAuCC,KAAvC,EAA8CC,YAA9C,EAA4D;EACzE,qBAA0BJ,aAAa,CAACI,YAAD,CAAvC;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EACA,IAAMC,SAAS,GAAGJ,KAAK,CAACD,KAAD,EAAQG,KAAR,CAAvB;EACA,IAAIE,SAAS,KAAK,IAAlB,EAAwBD,QAAQ,CAACC,SAAD,CAAR;EACxB,OAAO,CAACF,KAAD,EAAQC,QAAR,CAAP;AACD"},"metadata":{},"sourceType":"module"}