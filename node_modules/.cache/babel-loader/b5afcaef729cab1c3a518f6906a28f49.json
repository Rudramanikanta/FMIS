{"ast":null,"code":"import { useCallback, useState } from 'react';\n/**\n * Updates state, partial updates are merged into existing state values\n */\n\n/**\n * Mimics a React class component's state model, of having a single unified\n * `state` object and an updater that merges updates into the existing state, as\n * opposed to replacing it.\n *\n * ```js\n * const [state, setState] = useMergeState({ name: 'Betsy', age: 24 })\n *\n * setState({ name: 'Johan' }) // { name: 'Johan', age: 24 }\n *\n * setState(state => ({ age: state.age + 10 })) // { name: 'Johan', age: 34 }\n * ```\n *\n * @param initialState The initial state object\n */\n\nexport default function useMergeState(initialState) {\n  const [state, setState] = useState(initialState);\n  const updater = useCallback(update => {\n    if (update === null) return;\n\n    if (typeof update === 'function') {\n      setState(state => {\n        const nextState = update(state);\n        return nextState == null ? state : Object.assign({}, state, nextState);\n      });\n    } else {\n      setState(state => Object.assign({}, state, update));\n    }\n  }, [setState]);\n  return [state, updater];\n}","map":{"version":3,"names":["useCallback","useState","useMergeState","initialState","state","setState","updater","update","nextState","Object","assign"],"sources":["D:/react/crp-project/crp/node_modules/@restart/hooks/esm/useMergeState.js"],"sourcesContent":["import { useCallback, useState } from 'react';\n\n/**\n * Updates state, partial updates are merged into existing state values\n */\n\n/**\n * Mimics a React class component's state model, of having a single unified\n * `state` object and an updater that merges updates into the existing state, as\n * opposed to replacing it.\n *\n * ```js\n * const [state, setState] = useMergeState({ name: 'Betsy', age: 24 })\n *\n * setState({ name: 'Johan' }) // { name: 'Johan', age: 24 }\n *\n * setState(state => ({ age: state.age + 10 })) // { name: 'Johan', age: 34 }\n * ```\n *\n * @param initialState The initial state object\n */\nexport default function useMergeState(initialState) {\n  const [state, setState] = useState(initialState);\n  const updater = useCallback(update => {\n    if (update === null) return;\n    if (typeof update === 'function') {\n      setState(state => {\n        const nextState = update(state);\n        return nextState == null ? state : Object.assign({}, state, nextState);\n      });\n    } else {\n      setState(state => Object.assign({}, state, update));\n    }\n  }, [setState]);\n  return [state, updater];\n}"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,aAAT,CAAuBC,YAAvB,EAAqC;EAClD,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,YAAD,CAAlC;EACA,MAAMG,OAAO,GAAGN,WAAW,CAACO,MAAM,IAAI;IACpC,IAAIA,MAAM,KAAK,IAAf,EAAqB;;IACrB,IAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;MAChCF,QAAQ,CAACD,KAAK,IAAI;QAChB,MAAMI,SAAS,GAAGD,MAAM,CAACH,KAAD,CAAxB;QACA,OAAOI,SAAS,IAAI,IAAb,GAAoBJ,KAApB,GAA4BK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyBI,SAAzB,CAAnC;MACD,CAHO,CAAR;IAID,CALD,MAKO;MACLH,QAAQ,CAACD,KAAK,IAAIK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,EAAyBG,MAAzB,CAAV,CAAR;IACD;EACF,CAV0B,EAUxB,CAACF,QAAD,CAVwB,CAA3B;EAWA,OAAO,CAACD,KAAD,EAAQE,OAAR,CAAP;AACD"},"metadata":{},"sourceType":"module"}