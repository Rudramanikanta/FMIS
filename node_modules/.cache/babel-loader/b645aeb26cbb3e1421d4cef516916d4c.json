{"ast":null,"code":"import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\n\nvar noop = function noop() {};\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport var getRefTarget = function getRefTarget(ref) {\n  return ref && ('current' in ref ? ref.current : ref);\n};\nvar InitialTriggerEvents = {\n  click: 'mousedown',\n  mouseup: 'mousedown',\n  pointerup: 'pointerdown'\n};\n/**\n * The `useClickOutside` hook registers your callback on the document that fires\n * when a pointer event is registered outside of the provided ref or element.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onClickOutside\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\n\nfunction useClickOutside(ref) {\n  var onClickOutside = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      disabled = _ref.disabled,\n      _ref$clickTrigger = _ref.clickTrigger,\n      clickTrigger = _ref$clickTrigger === void 0 ? 'click' : _ref$clickTrigger;\n\n  var preventMouseClickOutsideRef = useRef(false);\n  var waitingForTrigger = useRef(false);\n  var handleMouseCapture = useCallback(function (e) {\n    var currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'ClickOutside captured a close event but does not have a ref to compare it to. ' + 'useClickOutside(), should be passed a ref that resolves to a DOM node');\n    preventMouseClickOutsideRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, e.target) || waitingForTrigger.current;\n    waitingForTrigger.current = false;\n  }, [ref]);\n  var handleInitialMouse = useEventCallback(function (e) {\n    var currentTarget = getRefTarget(ref);\n\n    if (currentTarget && contains(currentTarget, e.target)) {\n      waitingForTrigger.current = true;\n    }\n  });\n  var handleMouse = useEventCallback(function (e) {\n    if (!preventMouseClickOutsideRef.current) {\n      onClickOutside(e);\n    }\n  });\n  useEffect(function () {\n    var _ownerWindow$event, _ownerWindow$parent;\n\n    if (disabled || ref == null) return undefined;\n    var doc = ownerDocument(getRefTarget(ref));\n    var ownerWindow = doc.defaultView || window; // Store the current event to avoid triggering handlers immediately\n    // For things rendered in an iframe, the event might originate on the parent window\n    // so we should fall back to that global event if the local one doesn't exist\n    // https://github.com/facebook/react/issues/20074\n\n    var currentEvent = (_ownerWindow$event = ownerWindow.event) != null ? _ownerWindow$event : (_ownerWindow$parent = ownerWindow.parent) == null ? void 0 : _ownerWindow$parent.event;\n    var removeInitialTriggerListener = null;\n\n    if (InitialTriggerEvents[clickTrigger]) {\n      removeInitialTriggerListener = listen(doc, InitialTriggerEvents[clickTrigger], handleInitialMouse, true);\n    } // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n\n\n    var removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    var removeMouseListener = listen(doc, clickTrigger, function (e) {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleMouse(e);\n    });\n    var mobileSafariHackListeners = [];\n\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(function (el) {\n        return listen(el, 'mousemove', noop);\n      });\n    }\n\n    return function () {\n      removeInitialTriggerListener == null ? void 0 : removeInitialTriggerListener();\n      removeMouseCaptureListener();\n      removeMouseListener();\n      mobileSafariHackListeners.forEach(function (remove) {\n        return remove();\n      });\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleInitialMouse, handleMouse]);\n}\n\nexport default useClickOutside;","map":{"version":3,"names":["contains","listen","ownerDocument","useCallback","useEffect","useRef","useEventCallback","warning","noop","isLeftClickEvent","event","button","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","getRefTarget","ref","current","InitialTriggerEvents","click","mouseup","pointerup","useClickOutside","onClickOutside","disabled","clickTrigger","preventMouseClickOutsideRef","waitingForTrigger","handleMouseCapture","e","currentTarget","target","handleInitialMouse","handleMouse","_ownerWindow$event","_ownerWindow$parent","undefined","doc","ownerWindow","defaultView","window","currentEvent","parent","removeInitialTriggerListener","removeMouseCaptureListener","removeMouseListener","mobileSafariHackListeners","documentElement","slice","call","body","children","map","el","forEach","remove"],"sources":["D:/react/crp-project/crp/node_modules/@restart/ui/esm/useClickOutside.js"],"sourcesContent":["import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nconst noop = () => {};\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nexport const getRefTarget = ref => ref && ('current' in ref ? ref.current : ref);\nconst InitialTriggerEvents = {\n  click: 'mousedown',\n  mouseup: 'mousedown',\n  pointerup: 'pointerdown'\n};\n\n/**\n * The `useClickOutside` hook registers your callback on the document that fires\n * when a pointer event is registered outside of the provided ref or element.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onClickOutside\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useClickOutside(ref, onClickOutside = noop, {\n  disabled,\n  clickTrigger = 'click'\n} = {}) {\n  const preventMouseClickOutsideRef = useRef(false);\n  const waitingForTrigger = useRef(false);\n  const handleMouseCapture = useCallback(e => {\n    const currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'ClickOutside captured a close event but does not have a ref to compare it to. ' + 'useClickOutside(), should be passed a ref that resolves to a DOM node');\n    preventMouseClickOutsideRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, e.target) || waitingForTrigger.current;\n    waitingForTrigger.current = false;\n  }, [ref]);\n  const handleInitialMouse = useEventCallback(e => {\n    const currentTarget = getRefTarget(ref);\n    if (currentTarget && contains(currentTarget, e.target)) {\n      waitingForTrigger.current = true;\n    }\n  });\n  const handleMouse = useEventCallback(e => {\n    if (!preventMouseClickOutsideRef.current) {\n      onClickOutside(e);\n    }\n  });\n  useEffect(() => {\n    var _ownerWindow$event, _ownerWindow$parent;\n    if (disabled || ref == null) return undefined;\n    const doc = ownerDocument(getRefTarget(ref));\n    const ownerWindow = doc.defaultView || window;\n\n    // Store the current event to avoid triggering handlers immediately\n    // For things rendered in an iframe, the event might originate on the parent window\n    // so we should fall back to that global event if the local one doesn't exist\n    // https://github.com/facebook/react/issues/20074\n    let currentEvent = (_ownerWindow$event = ownerWindow.event) != null ? _ownerWindow$event : (_ownerWindow$parent = ownerWindow.parent) == null ? void 0 : _ownerWindow$parent.event;\n    let removeInitialTriggerListener = null;\n    if (InitialTriggerEvents[clickTrigger]) {\n      removeInitialTriggerListener = listen(doc, InitialTriggerEvents[clickTrigger], handleInitialMouse, true);\n    }\n\n    // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n    const removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    const removeMouseListener = listen(doc, clickTrigger, e => {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n      handleMouse(e);\n    });\n    let mobileSafariHackListeners = [];\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(el => listen(el, 'mousemove', noop));\n    }\n    return () => {\n      removeInitialTriggerListener == null ? void 0 : removeInitialTriggerListener();\n      removeMouseCaptureListener();\n      removeMouseListener();\n      mobileSafariHackListeners.forEach(remove => remove());\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleInitialMouse, handleMouse]);\n}\nexport default useClickOutside;"],"mappings":"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"},"metadata":{},"sourceType":"module"}