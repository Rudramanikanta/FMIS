{"ast":null,"code":"import _objectSpread from \"D:/react/crp-project/crp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"D:/react/crp-project/crp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"D:/react/crp-project/crp/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"bsPrefix\", \"split\", \"className\", \"childBsPrefix\", \"as\"];\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DropdownToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  var dropdownContext = useContext(DropdownContext);\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      _useDropdownToggle2 = _slicedToArray(_useDropdownToggle, 1),\n      toggleProps = _useDropdownToggle2[0];\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n    className: classNames(className, prefix, split && \"\".concat(prefix, \"-split\"), (dropdownContext == null ? void 0 : dropdownContext.show) && 'show')\n  }, toggleProps), props));\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","map":{"version":3,"names":["useMergedRefs","DropdownContext","useDropdownToggle","classNames","React","useContext","Button","useBootstrapPrefix","useWrappedRefWithWarning","jsx","_jsx","DropdownToggle","forwardRef","ref","bsPrefix","split","className","childBsPrefix","as","Component","props","prefix","dropdownContext","undefined","toggleProps","show","displayName"],"sources":["D:/react/crp-project/crp/node_modules/react-bootstrap/esm/DropdownToggle.js"],"sourcesContent":["import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  split,\n  className,\n  childBsPrefix,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = Button,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  const dropdownContext = useContext(DropdownContext);\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n  const [toggleProps] = useDropdownToggle();\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle'));\n\n  // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n  return /*#__PURE__*/_jsx(Component, {\n    className: classNames(className, prefix, split && `${prefix}-split`, (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\n    ...toggleProps,\n    ...props\n  });\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;"],"mappings":";;;;AAAA,OAAOA,aAAP,MAA0B,8BAA1B;AACA,OAAOC,eAAP,MAA4B,6BAA5B;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,IAAMC,cAAc,GAAG,aAAaP,KAAK,CAACQ,UAAN,CAAiB,gBAQlDC,GARkD,EAQ1C;EAAA,IAPTC,QAOS,QAPTA,QAOS;EAAA,IANTC,KAMS,QANTA,KAMS;EAAA,IALTC,SAKS,QALTA,SAKS;EAAA,IAJTC,aAIS,QAJTA,aAIS;EAAA,mBAFTC,EAES;EAAA,IAFLC,SAEK,wBAFOb,MAEP;EAAA,IADNc,KACM;;EACT,IAAMC,MAAM,GAAGd,kBAAkB,CAACO,QAAD,EAAW,iBAAX,CAAjC;EACA,IAAMQ,eAAe,GAAGjB,UAAU,CAACJ,eAAD,CAAlC;;EACA,IAAIgB,aAAa,KAAKM,SAAtB,EAAiC;IAC/BH,KAAK,CAACN,QAAN,GAAiBG,aAAjB;EACD;;EACD,yBAAsBf,iBAAiB,EAAvC;EAAA;EAAA,IAAOsB,WAAP;;EACAA,WAAW,CAACX,GAAZ,GAAkBb,aAAa,CAACwB,WAAW,CAACX,GAAb,EAAkBL,wBAAwB,CAACK,GAAD,EAAM,gBAAN,CAA1C,CAA/B,CAPS,CAST;EACA;;EACA,OAAO,aAAaH,IAAI,CAACS,SAAD;IACtBH,SAAS,EAAEb,UAAU,CAACa,SAAD,EAAYK,MAAZ,EAAoBN,KAAK,cAAOM,MAAP,WAAzB,EAAgD,CAACC,eAAe,IAAI,IAAnB,GAA0B,KAAK,CAA/B,GAAmCA,eAAe,CAACG,IAApD,KAA6D,MAA7G;EADC,GAEnBD,WAFmB,GAGnBJ,KAHmB,EAAxB;AAKD,CAxBmC,CAApC;AAyBAT,cAAc,CAACe,WAAf,GAA6B,gBAA7B;AACA,eAAef,cAAf"},"metadata":{},"sourceType":"module"}