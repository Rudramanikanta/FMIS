{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'label',\n    bsPrefix,\n    column = false,\n    visuallyHidden = false,\n    className,\n    htmlFor,\n    ...props\n  } = _ref;\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;","map":{"version":3,"names":["classNames","React","useContext","warning","Col","FormContext","useBootstrapPrefix","jsx","_jsx","FormLabel","forwardRef","ref","as","Component","bsPrefix","column","visuallyHidden","className","htmlFor","props","controlId","columnClass","classes","process","env","NODE_ENV","displayName"],"sources":["D:/react/crp-project/crp/node_modules/react-bootstrap/esm/FormLabel.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column = false,\n  visuallyHidden = false,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nexport default FormLabel;"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,MAAMC,SAAS,GAAG,aAAaR,KAAK,CAACS,UAAN,CAAiB,OAS7CC,GAT6C,KASrC;EAAA,IATsC;IAC/C;IACAC,EAAE,EAAEC,SAAS,GAAG,OAF+B;IAG/CC,QAH+C;IAI/CC,MAAM,GAAG,KAJsC;IAK/CC,cAAc,GAAG,KAL8B;IAM/CC,SAN+C;IAO/CC,OAP+C;IAQ/C,GAAGC;EAR4C,CAStC;EACT,MAAM;IACJC;EADI,IAEFlB,UAAU,CAACG,WAAD,CAFd;EAGAS,QAAQ,GAAGR,kBAAkB,CAACQ,QAAD,EAAW,YAAX,CAA7B;EACA,IAAIO,WAAW,GAAG,gBAAlB;EACA,IAAI,OAAON,MAAP,KAAkB,QAAtB,EAAgCM,WAAW,GAAI,GAAEA,WAAY,IAAGA,WAAY,IAAGN,MAAO,EAAtD;EAChC,MAAMO,OAAO,GAAGtB,UAAU,CAACiB,SAAD,EAAYH,QAAZ,EAAsBE,cAAc,IAAI,iBAAxC,EAA2DD,MAAM,IAAIM,WAArE,CAA1B;EACAE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCtB,OAAO,CAACiB,SAAS,IAAI,IAAb,IAAqB,CAACF,OAAvB,EAAgC,sEAAhC,CAA/C,GAAyJ,KAAK,CAA9J;EACAA,OAAO,GAAGA,OAAO,IAAIE,SAArB;EACA,IAAIL,MAAJ,EAAY,OAAO,aAAaP,IAAI,CAACJ,GAAD,EAAM;IACxCO,GAAG,EAAEA,GADmC;IAExCC,EAAE,EAAE,OAFoC;IAGxCK,SAAS,EAAEK,OAH6B;IAIxCJ,OAAO,EAAEA,OAJ+B;IAKxC,GAAGC;EALqC,CAAN,CAAxB;EAOZ;IACE;IACA;IACAX,IAAI,CAACK,SAAD,EAAY;MACdF,GAAG,EAAEA,GADS;MAEdM,SAAS,EAAEK,OAFG;MAGdJ,OAAO,EAAEA,OAHK;MAId,GAAGC;IAJW,CAAZ;EAHN;AAUD,CApC8B,CAA/B;AAqCAV,SAAS,CAACiB,WAAV,GAAwB,WAAxB;AACA,eAAejB,SAAf"},"metadata":{},"sourceType":"module"}