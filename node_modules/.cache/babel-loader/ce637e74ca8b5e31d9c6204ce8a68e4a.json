{"ast":null,"code":"import { useEffect } from 'react';\nimport useCommittedRef from './useCommittedRef';\n\nfunction useRafInterval(fn, ms) {\n  var paused = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var handle;\n  var start = new Date().getTime();\n  var fnRef = useCommittedRef(fn); // this ref is necessary b/c useEffect will sometimes miss a paused toggle\n  // orphaning a setTimeout chain in the aether, so relying on it's refresh logic is not reliable.\n\n  var pausedRef = useCommittedRef(paused);\n\n  function loop() {\n    var current = new Date().getTime();\n    var delta = current - start;\n    if (pausedRef.current) return;\n\n    if (delta >= ms && fnRef.current) {\n      fnRef.current();\n      start = new Date().getTime();\n    }\n\n    cancelAnimationFrame(handle);\n    handle = requestAnimationFrame(loop);\n  }\n\n  useEffect(function () {\n    handle = requestAnimationFrame(loop);\n    return function () {\n      return cancelAnimationFrame(handle);\n    };\n  }, []);\n}\n\nexport default useRafInterval;","map":{"version":3,"names":["useEffect","useCommittedRef","useRafInterval","fn","ms","paused","handle","start","Date","getTime","fnRef","pausedRef","loop","current","delta","cancelAnimationFrame","requestAnimationFrame"],"sources":["D:/react/crp-project/crp/node_modules/@restart/hooks/esm/useRafInterval.js"],"sourcesContent":["import { useEffect } from 'react';\nimport useCommittedRef from './useCommittedRef';\nfunction useRafInterval(fn, ms, paused = false) {\n  let handle;\n  let start = new Date().getTime();\n  const fnRef = useCommittedRef(fn);\n  // this ref is necessary b/c useEffect will sometimes miss a paused toggle\n  // orphaning a setTimeout chain in the aether, so relying on it's refresh logic is not reliable.\n  const pausedRef = useCommittedRef(paused);\n  function loop() {\n    const current = new Date().getTime();\n    const delta = current - start;\n    if (pausedRef.current) return;\n    if (delta >= ms && fnRef.current) {\n      fnRef.current();\n      start = new Date().getTime();\n    }\n    cancelAnimationFrame(handle);\n    handle = requestAnimationFrame(loop);\n  }\n  useEffect(() => {\n    handle = requestAnimationFrame(loop);\n    return () => cancelAnimationFrame(handle);\n  }, []);\n}\nexport default useRafInterval;"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AACA,SAASC,cAAT,CAAwBC,EAAxB,EAA4BC,EAA5B,EAAgD;EAAA,IAAhBC,MAAgB,uEAAP,KAAO;EAC9C,IAAIC,MAAJ;EACA,IAAIC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;EACA,IAAMC,KAAK,GAAGT,eAAe,CAACE,EAAD,CAA7B,CAH8C,CAI9C;EACA;;EACA,IAAMQ,SAAS,GAAGV,eAAe,CAACI,MAAD,CAAjC;;EACA,SAASO,IAAT,GAAgB;IACd,IAAMC,OAAO,GAAG,IAAIL,IAAJ,GAAWC,OAAX,EAAhB;IACA,IAAMK,KAAK,GAAGD,OAAO,GAAGN,KAAxB;IACA,IAAII,SAAS,CAACE,OAAd,EAAuB;;IACvB,IAAIC,KAAK,IAAIV,EAAT,IAAeM,KAAK,CAACG,OAAzB,EAAkC;MAChCH,KAAK,CAACG,OAAN;MACAN,KAAK,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAR;IACD;;IACDM,oBAAoB,CAACT,MAAD,CAApB;IACAA,MAAM,GAAGU,qBAAqB,CAACJ,IAAD,CAA9B;EACD;;EACDZ,SAAS,CAAC,YAAM;IACdM,MAAM,GAAGU,qBAAqB,CAACJ,IAAD,CAA9B;IACA,OAAO;MAAA,OAAMG,oBAAoB,CAACT,MAAD,CAA1B;IAAA,CAAP;EACD,CAHQ,EAGN,EAHM,CAAT;AAID;;AACD,eAAeJ,cAAf"},"metadata":{},"sourceType":"module"}